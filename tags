!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!C++	name	/aliased names/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!C	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C	m,member	/struct, and union members/
!_TAG_KIND_DESCRIPTION!C	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!C++	c,class	/classes/
!_TAG_KIND_DESCRIPTION!C++	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C++	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C++	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C++	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C++	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C++	m,member	/class, struct, and union members/
!_TAG_KIND_DESCRIPTION!C++	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!C++	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C++	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C++	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C++	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!Sh	a,alias	/aliases/
!_TAG_KIND_DESCRIPTION!Sh	f,function	/functions/
!_TAG_KIND_DESCRIPTION!Sh	h,heredoc	/label for here document/
!_TAG_KIND_DESCRIPTION!Sh	s,script	/script files/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!C	1.1	/current.age/
!_TAG_PARSER_VERSION!C++	1.1	/current.age/
!_TAG_PARSER_VERSION!Sh	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/jk/programming/standard_library/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.1.0	/v6.1.0/
!_TAG_ROLE_DESCRIPTION!C!function	foreigndecl	/declared in foreign languages/
!_TAG_ROLE_DESCRIPTION!C!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!C!struct	foreigndecl	/declared in foreign languages/
!_TAG_ROLE_DESCRIPTION!C++!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C++!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C++!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!Sh!heredoc	endmarker	/end marker/
!_TAG_ROLE_DESCRIPTION!Sh!script	loaded	/loaded/
CREATE_NODE	data_structures/linked_list.h	/^#define CREATE_NODE(/;"	d
DEFAULT_CAPACITY	allocators/arena.h	/^#define DEFAULT_CAPACITY /;"	d
DEFAULT_SIZE	data_structures/dynamic_array.h	/^#define DEFAULT_SIZE /;"	d
MAX	data_structures/heap.h	/^	MAX,$/;"	e	enum:__anoncbcb66450303
MIN	data_structures/heap.h	/^	MIN,$/;"	e	enum:__anoncbcb66450303
REPORT_FAILED_TEST	test.c	/^#define REPORT_FAILED_TEST(/;"	d	file:
TERMINAL_RED	defines.h	/^#define TERMINAL_RED /;"	d
TERMINAL_RESET	defines.h	/^#define TERMINAL_RESET /;"	d
UNDEFINED	data_structures/heap.h	/^	UNDEFINED = 0,$/;"	e	enum:__anoncbcb66450303
__ARENA__	allocators/arena.h	/^#define __ARENA__$/;"	d
__BINARY_SEARCH_TREE__	data_structures/binary_searach_tree.h	/^#define __BINARY_SEARCH_TREE__$/;"	d
__DEFINES__	defines.h	/^#define __DEFINES__$/;"	d
__DYNAMIC_ARRAY__	data_structures/dynamic_array.h	/^#define __DYNAMIC_ARRAY__$/;"	d
__HEAP__	data_structures/heap.h	/^#define __HEAP__$/;"	d
__LINKED_LIST__	data_structures/linked_list.h	/^#define __LINKED_LIST__$/;"	d
__QUEUE__	data_structures/queue.h	/^#define __QUEUE__$/;"	d
__STACK__	data_structures/stack.h	/^#define __STACK__$/;"	d
__UTILS__	utils.h	/^#define __UTILS__$/;"	d
__anon1fa2de8c0108	data_structures/queue.h	/^typedef struct {$/;"	s
__anon95bb2f6a0108	data_structures/dynamic_array.h	/^typedef struct {$/;"	s
__anonb6f0081d0108	data_structures/stack.h	/^typedef struct {$/;"	s
__anonbb4b0ad10108	data_structures/binary_searach_tree.h	/^typedef struct {$/;"	s
__anonbef0b4590108	data_structures/linked_list.h	/^typedef struct {$/;"	s
__anoncbcb66450108	data_structures/heap.h	/^typedef struct {$/;"	s
__anoncbcb66450208	data_structures/heap.h	/^typedef struct {$/;"	s
__anoncbcb66450303	data_structures/heap.h	/^typedef enum {$/;"	g
arena	allocators/arena.h	/^typedef struct arena {$/;"	s
arena_	data_structures/binary_searach_tree.h	/^	arena_s* arena_;$/;"	m	struct:__anonbb4b0ad10108	typeref:typename:arena_s *
arena_	data_structures/dynamic_array.h	/^	arena_s* arena_;$/;"	m	struct:__anon95bb2f6a0108	typeref:typename:arena_s *
arena_	data_structures/linked_list.h	/^	arena_s* arena_;$/;"	m	struct:__anonbef0b4590108	typeref:typename:arena_s *
arena_concat_string	allocators/arena.h	/^arena_concat_string(arena_s* _arena, const char* _first, const char* _second)$/;"	f	typeref:typename:char *
arena_free	allocators/arena.h	/^arena_free(arena_s* _arena)$/;"	f	typeref:typename:void
arena_init	allocators/arena.h	/^arena_init(arena_s* _arena)$/;"	f	typeref:typename:void
arena_resize	allocators/arena.h	/^arena_resize(arena_s* _arena,$/;"	f	typeref:typename:void *
arena_s	allocators/arena.h	/^} arena_s;$/;"	t	typeref:struct:arena
bst_add	data_structures/binary_searach_tree.h	/^void bst_add(bst_s* _tree, const int _value)$/;"	f	typeref:typename:void
bst_free	data_structures/binary_searach_tree.h	/^void bst_free(bst_s* _tree)$/;"	f	typeref:typename:void
bst_init	data_structures/binary_searach_tree.h	/^void bst_init(bst_s* _tree, arena_s* _arena)$/;"	f	typeref:typename:void
bst_node_add_	data_structures/binary_searach_tree.h	/^void bst_node_add_(node_s_* _node, const int _value)$/;"	f	typeref:typename:void
bst_s	data_structures/binary_searach_tree.h	/^}bst_s;$/;"	t	typeref:struct:__anonbb4b0ad10108
create_node_	data_structures/linked_list.h	/^node_s* create_node_(linked_list_s* _ll)$/;"	f	typeref:typename:node_s *
current_size	allocators/arena.h	/^    unsigned current_size;$/;"	m	struct:region	typeref:typename:unsigned
current_size	data_structures/dynamic_array.h	/^	uint current_size;$/;"	m	struct:__anon95bb2f6a0108	typeref:typename:uint
current_size	data_structures/heap.h	/^	uint current_size, max_size;$/;"	m	struct:__anoncbcb66450108	typeref:typename:uint
current_size	data_structures/heap.h	/^	uint current_size, max_size;$/;"	m	struct:__anoncbcb66450208	typeref:typename:uint
current_size	data_structures/queue.h	/^	uint head, current_size, max_size;$/;"	m	struct:__anon1fa2de8c0108	typeref:typename:uint
current_size	data_structures/stack.h	/^	uint current_size, max_size;$/;"	m	struct:__anonb6f0081d0108	typeref:typename:uint
da_add_at	data_structures/dynamic_array.h	/^void da_add_at(dynamic_array_s* _array, const uint _index, void* _val)$/;"	f	typeref:typename:void
da_append	data_structures/dynamic_array.h	/^void da_append(dynamic_array_s* _array, void* _val)$/;"	f	typeref:typename:void
da_free	data_structures/dynamic_array.h	/^void da_free(dynamic_array_s* _array)$/;"	f	typeref:typename:void
da_get_at	data_structures/dynamic_array.h	/^void* da_get_at(dynamic_array_s* _array, const uint _index)$/;"	f	typeref:typename:void *
da_init	data_structures/dynamic_array.h	/^void da_init(dynamic_array_s* _array, const uint _size, arena_s* _arena)$/;"	f	typeref:typename:void
da_print	data_structures/dynamic_array.h	/^void da_print(dynamic_array_s* _array)$/;"	f	typeref:typename:void
da_resize	data_structures/dynamic_array.h	/^void da_resize(dynamic_array_s* _array, const int _new_size)$/;"	f	typeref:typename:void
da_test_1	test.c	/^void da_test_1()$/;"	f	typeref:typename:void
da_test_2	test.c	/^void da_test_2()$/;"	f	typeref:typename:void
da_test_3	test.c	/^void da_test_3()$/;"	f	typeref:typename:void
data	allocators/arena.h	/^    uint8_t *data;$/;"	m	struct:region	typeref:typename:uint8_t *
data	data_structures/binary_searach_tree.h	/^	int data;$/;"	m	struct:node	typeref:typename:int
data	data_structures/dynamic_array.h	/^	void** data;$/;"	m	struct:__anon95bb2f6a0108	typeref:typename:void **
data	data_structures/heap.h	/^	dynamic_array data;$/;"	m	struct:__anoncbcb66450108	typeref:typename:dynamic_array
data	data_structures/heap.h	/^	dynamic_array data;$/;"	m	struct:__anoncbcb66450208	typeref:typename:dynamic_array
data	data_structures/linked_list.h	/^	void* data;$/;"	m	struct:node	typeref:typename:void *
data_	data_structures/queue.h	/^	dynamic_array_s data_;$/;"	m	struct:__anon1fa2de8c0108	typeref:typename:dynamic_array_s
data_	data_structures/stack.h	/^	dynamic_array_s data_;$/;"	m	struct:__anonb6f0081d0108	typeref:typename:dynamic_array_s
dynamic_array_s	data_structures/dynamic_array.h	/^}dynamic_array_s;$/;"	t	typeref:struct:__anon95bb2f6a0108
end	allocators/arena.h	/^    region_s_* end;$/;"	m	struct:arena	typeref:typename:region_s_ *
error_out	utils.h	/^#define error_out(/;"	d
failed_tests_numer	test.c	/^uint	failed_tests_numer;$/;"	v	typeref:typename:uint
free_region_	allocators/arena.h	/^free_region_(region_s_** _region)$/;"	f	typeref:typename:void
get_raw_memory	allocators/arena.h	/^get_raw_memory(arena_s* _arena, const unsigned _amount)$/;"	f	typeref:typename:void *
global_arena	test.c	/^arena_s global_arena;$/;"	v	typeref:typename:arena_s
head	data_structures/linked_list.h	/^	node_s* head;$/;"	m	struct:__anonbef0b4590108	typeref:typename:node_s *
head	data_structures/queue.h	/^	uint head, current_size, max_size;$/;"	m	struct:__anon1fa2de8c0108	typeref:typename:uint
heap_e	data_structures/heap.h	/^}heap_e;$/;"	t	typeref:enum:__anoncbcb66450303
init_region_	allocators/arena.h	/^init_region_(region_s_* _region, const unsigned _capacity)$/;"	f	typeref:typename:void
left	data_structures/binary_searach_tree.h	/^	struct node* left;$/;"	m	struct:node	typeref:struct:node *
linked_list_s	data_structures/linked_list.h	/^}linked_list_s;$/;"	t	typeref:struct:__anonbef0b4590108
ll_append	data_structures/linked_list.h	/^void ll_append(linked_list_s* _ll, void* _value)$/;"	f	typeref:typename:void
ll_free	data_structures/linked_list.h	/^void ll_free(linked_list_s* _ll)$/;"	f	typeref:typename:void
ll_get_at	data_structures/linked_list.h	/^void* ll_get_at(linked_list_s* _ll, uint _index)$/;"	f	typeref:typename:void *
ll_init	data_structures/linked_list.h	/^void ll_init(linked_list_s* _ll, arena_s* _arena)$/;"	f	typeref:typename:void
ll_insert	data_structures/linked_list.h	/^void ll_insert(linked_list_s* _ll, uint _index, void* _value)$/;"	f	typeref:typename:void
ll_remove	data_structures/linked_list.h	/^void* ll_remove(linked_list_s* _ll, uint _index)$/;"	f	typeref:typename:void *
ll_test_1	test.c	/^void ll_test_1()$/;"	f	typeref:typename:void
main	main.c	/^int main()$/;"	f	typeref:typename:int
main	test.c	/^int main()$/;"	f	typeref:typename:int
max_heap_add	data_structures/heap.h	/^void max_heap_add(max_heap_s* _heap, void* _value)$/;"	f	typeref:typename:void
max_heap_init	data_structures/heap.h	/^void max_heap_init(max_heap_s* _heap, const uint _size, arena_s* _arena, bool(*_predicate)(void*/;"	f	typeref:typename:void
max_heap_s	data_structures/heap.h	/^}max_heap_s;$/;"	t	typeref:struct:__anoncbcb66450208
max_size	allocators/arena.h	/^    unsigned max_size;$/;"	m	struct:region	typeref:typename:unsigned
max_size	data_structures/dynamic_array.h	/^	uint max_size;$/;"	m	struct:__anon95bb2f6a0108	typeref:typename:uint
max_size	data_structures/heap.h	/^	uint current_size, max_size;$/;"	m	struct:__anoncbcb66450108	typeref:typename:uint
max_size	data_structures/heap.h	/^	uint current_size, max_size;$/;"	m	struct:__anoncbcb66450208	typeref:typename:uint
max_size	data_structures/queue.h	/^	uint head, current_size, max_size;$/;"	m	struct:__anon1fa2de8c0108	typeref:typename:uint
max_size	data_structures/stack.h	/^	uint current_size, max_size;$/;"	m	struct:__anonb6f0081d0108	typeref:typename:uint
min_heap_add	data_structures/heap.h	/^void min_heap_add(min_heap_s* _heap, void* _value)$/;"	f	typeref:typename:void
min_heap_init	data_structures/heap.h	/^void min_heap_init(min_heap_s* _heap, const uint _size, arena_s* _arena, bool(*_predicate)(void*/;"	f	typeref:typename:void
min_heap_print	data_structures/heap.h	/^void min_heap_print(min_heap_s* _heap)$/;"	f	typeref:typename:void
min_heap_s	data_structures/heap.h	/^}min_heap_s;$/;"	t	typeref:struct:__anoncbcb66450108
next	allocators/arena.h	/^    struct region* next;$/;"	m	struct:region	typeref:struct:region *
next	data_structures/linked_list.h	/^	struct node* next;$/;"	m	struct:node	typeref:struct:node *
node	data_structures/binary_searach_tree.h	/^typedef struct node {$/;"	s
node	data_structures/linked_list.h	/^typedef struct node {$/;"	s
node_s	data_structures/linked_list.h	/^}node_s;$/;"	t	typeref:struct:node
node_s_	data_structures/binary_searach_tree.h	/^}node_s_;$/;"	t	typeref:struct:node
predicate	data_structures/heap.h	/^	bool (*predicate)(void*, void*);$/;"	m	struct:__anoncbcb66450108	typeref:typename:bool (*)(void *,void *)
predicate	data_structures/heap.h	/^	bool (*predicate)(void*, void*);$/;"	m	struct:__anoncbcb66450208	typeref:typename:bool (*)(void *,void *)
queue_add	data_structures/queue.h	/^void queue_add(queue_s* _queue, void* _value)$/;"	f	typeref:typename:void
queue_init	data_structures/queue.h	/^void queue_init(queue_s* _queue, const uint _size, arena_s* _arena)$/;"	f	typeref:typename:void
queue_is_empty	data_structures/queue.h	/^bool queue_is_empty(queue_s* _queue)$/;"	f	typeref:typename:bool
queue_pop	data_structures/queue.h	/^void* queue_pop(queue_s* _queue)$/;"	f	typeref:typename:void *
queue_s	data_structures/queue.h	/^}queue_s;$/;"	t	typeref:struct:__anon1fa2de8c0108
queue_test_1	test.c	/^void queue_test_1()$/;"	f	typeref:typename:void
region	allocators/arena.h	/^typedef struct region {$/;"	s
region_s_	allocators/arena.h	/^} region_s_;$/;"	t	typeref:struct:region
right	data_structures/binary_searach_tree.h	/^	struct node* right;$/;"	m	struct:node	typeref:struct:node *
root	data_structures/binary_searach_tree.h	/^	node_s_* root;$/;"	m	struct:__anonbb4b0ad10108	typeref:typename:node_s_ *
sanity_check	utils.h	/^static void sanity_check()$/;"	f	typeref:typename:void
size	data_structures/binary_searach_tree.h	/^	uint size;$/;"	m	struct:__anonbb4b0ad10108	typeref:typename:uint
size_	data_structures/linked_list.h	/^	uint size_;$/;"	m	struct:__anonbef0b4590108	typeref:typename:uint
stack_add	data_structures/stack.h	/^void stack_add(stack_s* _stack, void* _value)$/;"	f	typeref:typename:void
stack_init	data_structures/stack.h	/^void stack_init(stack_s* _stack, const uint _size, arena_s* _arena)$/;"	f	typeref:typename:void
stack_is_empty	data_structures/stack.h	/^bool stack_is_empty(stack_s* _stack)$/;"	f	typeref:typename:bool
stack_pop	data_structures/stack.h	/^void* stack_pop(stack_s* _stack)$/;"	f	typeref:typename:void *
stack_print	data_structures/stack.h	/^void stack_print(stack_s* _stack)$/;"	f	typeref:typename:void
stack_s	data_structures/stack.h	/^}stack_s;$/;"	t	typeref:struct:__anonb6f0081d0108
stack_test_1	test.c	/^void stack_test_1()$/;"	f	typeref:typename:void
start	allocators/arena.h	/^    region_s_* start;$/;"	m	struct:arena	typeref:typename:region_s_ *
swap_elems_	data_structures/heap.h	/^static void swap_elems_(void** _a, void** _b)$/;"	f	typeref:typename:void
tail	data_structures/linked_list.h	/^	node_s* tail;$/;"	m	struct:__anonbef0b4590108	typeref:typename:node_s *
test_dynamic_array	main.c	/^void test_dynamic_array(arena_s* arena)$/;"	f	typeref:typename:void
test_dynamic_array	test.c	/^void test_dynamic_array()$/;"	f	typeref:typename:void
test_linked_list	main.c	/^void test_linked_list(arena_s* arena)$/;"	f	typeref:typename:void
test_linked_list	test.c	/^void test_linked_list()$/;"	f	typeref:typename:void
test_queue	main.c	/^void test_queue(arena_s* arena)$/;"	f	typeref:typename:void
test_queue	test.c	/^void test_queue()$/;"	f	typeref:typename:void
test_results	test.c	/^char*	test_results;$/;"	v	typeref:typename:char *
test_stack	main.c	/^void test_stack(arena_s* arena)$/;"	f	typeref:typename:void
test_stack	test.c	/^void test_stack()$/;"	f	typeref:typename:void
total_tests_number	test.c	/^uint	total_tests_number;$/;"	v	typeref:typename:uint
uint	defines.h	/^typedef unsigned uint;$/;"	t	typeref:typename:unsigned
uses_arena_	data_structures/binary_searach_tree.h	/^	bool uses_arena_;$/;"	m	struct:__anonbb4b0ad10108	typeref:typename:bool
uses_arena_	data_structures/dynamic_array.h	/^	bool uses_arena_;$/;"	m	struct:__anon95bb2f6a0108	typeref:typename:bool
uses_arena_	data_structures/linked_list.h	/^	bool uses_arena_;$/;"	m	struct:__anonbef0b4590108	typeref:typename:bool
